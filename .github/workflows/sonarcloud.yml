name: SonarQube

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: holos_db
          MYSQL_USER: H0l0s_DB
          MYSQL_PASSWORD: H0l0s1$PP
        options: --health-cmd="mysqladmin ping --silent" --health-timeout=5s --health-retries=5

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # No hacer un clon superficial para análisis más relevante

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Wait for MySQL to be ready
        run: |
          docker exec $(docker ps -q --filter "ancestor=mysql:8.0") \
          mysqladmin --wait=30 --host=localhost --user=root --password=root ping

      - name: Build and run tests with Maven (Debug)
        run: mvn clean test -f ./Backend/pom.xml -X

      - name: Build and analyze backend
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn clean verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -f ./Backend/pom.xml -Dsonar.projectKey=joagongan_Holos_joagongan

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'  

      - name: Install frontend dependencies
        run: |
          cd ./frontend
          npm install

      - name: Run frontend analysis with SonarCloud
        run: |
          cd ./frontend
          npx sonar-scanner  -Dsonar.organization=joagongan -Dsonar.projectKey=joagongan_Holos_joagongan_frontend -Dsonar.sources=app -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=${{ secrets.SONAR_TOKEN }}
